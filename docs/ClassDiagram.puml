@startuml
'https://plantuml.com/class-diagram

package presentation {
    package exercise {
        annotation ExerciseDetailScreen
        annotation ExerciseListScreen {
            onExerciseClick: (Exercise) -> Unit
        }

        class ExerciseViewModel {
            defaultExercises: Flow<List<Exercise>
            onAction(action: ExerciseAction)
        }
    }
}

package domain {
    package repository {
        interface ExerciseRepository {
            getDefaultExercises(): Flow<List<Exercise>>
            addCustomExercise(): Result<Unit>
        }
    }

    package model {
        class Exercise {
            id: String
            name: String
            description: String?
            isCustom: Boolean
            primaryMuscle: MuscleGroup
            secondaryMuscle: List<MuscleGroup>
        }
    }
}

package data {
    class FirestoreExerciseRepository
}

note bottom of ExerciseRepository : Rozhraní abstrahuje, odkud data pochází a jak se ukládají
note right of ExerciseViewModel
    ViewModel poskytuje stav, který se má
    zobrazit v UI a reaguje na akce uživatele.
    Může být sdílený mezi obrazovkami
endnote

note bottom of FirestoreExerciseRepository
    Repozitář je hlavní vlastník dat a jediný zdroj pravdy.
    Poskytuje ostatním vrstvám data v neměnné podobě.
    Jeho odpovědností je synchronizace lokální a online databáze.
endnote

ExerciseListScreen -> ExerciseViewModel : Event
ExerciseListScreen <- ExerciseViewModel : State

ExerciseDetailScreen --> ExerciseViewModel : Event
ExerciseDetailScreen <-- ExerciseViewModel : State

ExerciseViewModel --> ExerciseRepository : Event
ExerciseViewModel <-- ExerciseRepository : State

ExerciseRepository <|.. FirestoreExerciseRepository
@enduml